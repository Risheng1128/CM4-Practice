ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"sysmem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.__sbrk_heap_end,"aw",%nobits
  18              		.align	2
  21              	__sbrk_heap_end:
  22 0000 00000000 		.space	4
  23              		.section	.text._sbrk,"ax",%progbits
  24              		.align	1
  25              		.global	_sbrk
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	_sbrk:
  33              	.LFB0:
  34              		.file 1 "./Src/sysmem.c"
   1:./Src/sysmem.c **** /**
   2:./Src/sysmem.c ****  ******************************************************************************
   3:./Src/sysmem.c ****  * @file      sysmem.c
   4:./Src/sysmem.c ****  * @author    Generated by STM32CubeIDE
   5:./Src/sysmem.c ****  * @brief     STM32CubeIDE System Memory calls file
   6:./Src/sysmem.c ****  *
   7:./Src/sysmem.c ****  *            For more information about which C functions
   8:./Src/sysmem.c ****  *            need which of these lowlevel functions
   9:./Src/sysmem.c ****  *            please consult the newlib libc manual
  10:./Src/sysmem.c ****  ******************************************************************************
  11:./Src/sysmem.c ****  * @attention
  12:./Src/sysmem.c ****  *
  13:./Src/sysmem.c ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  14:./Src/sysmem.c ****  * All rights reserved.</center></h2>
  15:./Src/sysmem.c ****  *
  16:./Src/sysmem.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  17:./Src/sysmem.c ****  * the "License"; You may not use this file except in compliance with the
  18:./Src/sysmem.c ****  * License. You may obtain a copy of the License at:
  19:./Src/sysmem.c ****  *                        opensource.org/licenses/BSD-3-Clause
  20:./Src/sysmem.c ****  *
  21:./Src/sysmem.c ****  ******************************************************************************
  22:./Src/sysmem.c ****  */
  23:./Src/sysmem.c **** 
  24:./Src/sysmem.c **** /* Includes */
  25:./Src/sysmem.c **** #include <errno.h>
  26:./Src/sysmem.c **** #include <stdint.h>
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s 			page 2


  27:./Src/sysmem.c **** 
  28:./Src/sysmem.c **** /**
  29:./Src/sysmem.c ****  * Pointer to the current high watermark of the heap usage
  30:./Src/sysmem.c ****  */
  31:./Src/sysmem.c **** static uint8_t *__sbrk_heap_end = NULL;
  32:./Src/sysmem.c **** 
  33:./Src/sysmem.c **** /**
  34:./Src/sysmem.c ****  * @brief _sbrk() allocates memory to the newlib heap and is used by malloc
  35:./Src/sysmem.c ****  *        and others from the C library
  36:./Src/sysmem.c ****  *
  37:./Src/sysmem.c ****  * @verbatim
  38:./Src/sysmem.c ****  * ############################################################################
  39:./Src/sysmem.c ****  * #  .data  #  .bss  #       newlib heap       #          MSP stack          #
  40:./Src/sysmem.c ****  * #         #        #                         # Reserved by _Min_Stack_Size #
  41:./Src/sysmem.c ****  * ############################################################################
  42:./Src/sysmem.c ****  * ^-- RAM start      ^-- _end                             _estack, RAM end --^
  43:./Src/sysmem.c ****  * @endverbatim
  44:./Src/sysmem.c ****  *
  45:./Src/sysmem.c ****  * This implementation starts allocating at the '_end' linker symbol
  46:./Src/sysmem.c ****  * The '_Min_Stack_Size' linker symbol reserves a memory for the MSP stack
  47:./Src/sysmem.c ****  * The implementation considers '_estack' linker symbol to be RAM end
  48:./Src/sysmem.c ****  * NOTE: If the MSP stack, at any point during execution, grows larger than the
  49:./Src/sysmem.c ****  * reserved size, please increase the '_Min_Stack_Size'.
  50:./Src/sysmem.c ****  *
  51:./Src/sysmem.c ****  * @param incr Memory size
  52:./Src/sysmem.c ****  * @return Pointer to allocated memory
  53:./Src/sysmem.c ****  */
  54:./Src/sysmem.c **** void *_sbrk(ptrdiff_t incr)
  55:./Src/sysmem.c **** {
  35              		.loc 1 55 1
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 24
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 86B0     		sub	sp, sp, #24
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 32
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  50 0006 7860     		str	r0, [r7, #4]
  56:./Src/sysmem.c ****   extern uint8_t _end; /* Symbol defined in the linker script */
  57:./Src/sysmem.c ****   extern uint8_t _estack; /* Symbol defined in the linker script */
  58:./Src/sysmem.c ****   extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  59:./Src/sysmem.c ****   const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  51              		.loc 1 59 32
  52 0008 144A     		ldr	r2, .L5
  53              		.loc 1 59 53
  54 000a 154B     		ldr	r3, .L5+4
  55              		.loc 1 59 18
  56 000c D31A     		subs	r3, r2, r3
  57 000e 7B61     		str	r3, [r7, #20]
  60:./Src/sysmem.c ****   const uint8_t *max_heap = (uint8_t *)stack_limit;
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s 			page 3


  58              		.loc 1 60 18
  59 0010 7B69     		ldr	r3, [r7, #20]
  60 0012 3B61     		str	r3, [r7, #16]
  61:./Src/sysmem.c ****   uint8_t *prev_heap_end;
  62:./Src/sysmem.c **** 
  63:./Src/sysmem.c ****   /* Initialize heap end at first call */
  64:./Src/sysmem.c ****   if (NULL == __sbrk_heap_end)
  61              		.loc 1 64 12
  62 0014 134B     		ldr	r3, .L5+8
  63 0016 1B68     		ldr	r3, [r3]
  64              		.loc 1 64 6
  65 0018 002B     		cmp	r3, #0
  66 001a 02D1     		bne	.L2
  65:./Src/sysmem.c ****   {
  66:./Src/sysmem.c ****     __sbrk_heap_end = &_end;
  67              		.loc 1 66 21
  68 001c 114B     		ldr	r3, .L5+8
  69 001e 124A     		ldr	r2, .L5+12
  70 0020 1A60     		str	r2, [r3]
  71              	.L2:
  67:./Src/sysmem.c ****   }
  68:./Src/sysmem.c **** 
  69:./Src/sysmem.c ****   /* Protect heap from growing into the reserved MSP stack */
  70:./Src/sysmem.c ****   if (__sbrk_heap_end + incr > max_heap)
  72              		.loc 1 70 23
  73 0022 104B     		ldr	r3, .L5+8
  74 0024 1A68     		ldr	r2, [r3]
  75 0026 7B68     		ldr	r3, [r7, #4]
  76 0028 1344     		add	r3, r3, r2
  77              		.loc 1 70 6
  78 002a 3A69     		ldr	r2, [r7, #16]
  79 002c 9A42     		cmp	r2, r3
  80 002e 07D2     		bcs	.L3
  71:./Src/sysmem.c ****   {
  72:./Src/sysmem.c ****     errno = ENOMEM;
  81              		.loc 1 72 5
  82 0030 FFF7FEFF 		bl	__errno
  83 0034 0346     		mov	r3, r0
  84              		.loc 1 72 11
  85 0036 0C22     		movs	r2, #12
  86 0038 1A60     		str	r2, [r3]
  73:./Src/sysmem.c ****     return (void *)-1;
  87              		.loc 1 73 12
  88 003a 4FF0FF33 		mov	r3, #-1
  89 003e 09E0     		b	.L4
  90              	.L3:
  74:./Src/sysmem.c ****   }
  75:./Src/sysmem.c **** 
  76:./Src/sysmem.c ****   prev_heap_end = __sbrk_heap_end;
  91              		.loc 1 76 17
  92 0040 084B     		ldr	r3, .L5+8
  93 0042 1B68     		ldr	r3, [r3]
  94 0044 FB60     		str	r3, [r7, #12]
  77:./Src/sysmem.c ****   __sbrk_heap_end += incr;
  95              		.loc 1 77 19
  96 0046 074B     		ldr	r3, .L5+8
  97 0048 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s 			page 4


  98 004a 7B68     		ldr	r3, [r7, #4]
  99 004c 1344     		add	r3, r3, r2
 100 004e 054A     		ldr	r2, .L5+8
 101 0050 1360     		str	r3, [r2]
  78:./Src/sysmem.c **** 
  79:./Src/sysmem.c ****   return (void *)prev_heap_end;
 102              		.loc 1 79 10
 103 0052 FB68     		ldr	r3, [r7, #12]
 104              	.L4:
  80:./Src/sysmem.c **** }
 105              		.loc 1 80 1
 106 0054 1846     		mov	r0, r3
 107 0056 1837     		adds	r7, r7, #24
 108              	.LCFI3:
 109              		.cfi_def_cfa_offset 8
 110 0058 BD46     		mov	sp, r7
 111              	.LCFI4:
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 005a 80BD     		pop	{r7, pc}
 115              	.L6:
 116              		.align	2
 117              	.L5:
 118 005c 00000000 		.word	_estack
 119 0060 00000000 		.word	_Min_Stack_Size
 120 0064 00000000 		.word	__sbrk_heap_end
 121 0068 00000000 		.word	_end
 122              		.cfi_endproc
 123              	.LFE0:
 125              		.text
 126              	.Letext0:
 127              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\lib\\gcc\\arm-none-eabi\
 128              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 129              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 sysmem.c
C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s:18     .bss.__sbrk_heap_end:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s:21     .bss.__sbrk_heap_end:00000000 __sbrk_heap_end
C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s:24     .text._sbrk:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s:32     .text._sbrk:00000000 _sbrk
C:\Users\Benson\AppData\Local\Temp\ccfQzmdP.s:118    .text._sbrk:0000005c $d

UNDEFINED SYMBOLS
__errno
_estack
_Min_Stack_Size
_end
