ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"myusart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MYUSART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MYUSART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MYUSART_Init:
  27              	.LFB0:
  28              		.file 1 "./Src/myusart.c"
   1:./Src/myusart.c **** /**
   2:./Src/myusart.c ****   ******************************************************************************
   3:./Src/myusart.c ****   * @file    myusart.c
   4:./Src/myusart.c ****   * @author  Ri-Sheng Chen
   5:./Src/myusart.c ****   * @brief   This file contains functions to enable printf and scanf on STM32F303ZE
   6:./Src/myusart.c ****   ******************************************************************************
   7:./Src/myusart.c ****   * @attention
   8:./Src/myusart.c ****   *   - PD8: USART3 Tx
   9:./Src/myusart.c ****   *   - PD9: USART3 Rx
  10:./Src/myusart.c ****   * 
  11:./Src/myusart.c ****   *   ---------- GPIO Set ------------
  12:./Src/myusart.c ****   *   - GPIOD_MODE:      Alternate function mode
  13:./Src/myusart.c ****   *   - GPIOD_OSPEEDR:   Low Speed
  14:./Src/myusart.c ****   *   - GPIOD_PUPDR:     No Pull-up & Pull-down
  15:./Src/myusart.c ****   *   - GPIOD_OTYPER:    Push-Pull
  16:./Src/myusart.c ****   *   - GPIOD_AFRH:      AF7 (USART3 Tx/Rx)
  17:./Src/myusart.c ****   *  
  18:./Src/myusart.c ****   *   ---------- USART3 Set ------------
  19:./Src/myusart.c ****   *   - F_CLK:           8MHz
  20:./Src/myusart.c ****   *   - USART3_Mode:     Tx/Rx Enable
  21:./Src/myusart.c ****   *   - USART3_Parity:   Parity disable
  22:./Src/myusart.c ****   *   - USART3_StopBits: 1
  23:./Src/myusart.c ****   *   - USART3_WordLen:  8
  24:./Src/myusart.c ****   *   - USART3_Baud:     38400
  25:./Src/myusart.c ****   *   - USART3_HW_FLOW:  None
  26:./Src/myusart.c ****   *   - Oversampling:    16
  27:./Src/myusart.c ****   **/
  28:./Src/myusart.c **** 
  29:./Src/myusart.c **** #include "myusart.h"
  30:./Src/myusart.c **** 
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 2


  31:./Src/myusart.c **** void MYUSART_Init()
  32:./Src/myusart.c **** {
  29              		.loc 1 32 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  33:./Src/myusart.c ****     /**************************** GPIO Set ****************************/
  34:./Src/myusart.c ****     /* GPIOD RCC Enable */
  35:./Src/myusart.c ****     RCC_AHBENR |= 1 << 20;  /* Enable clock of GPIOD */
  41              		.loc 1 35 16
  42 0004 1B4B     		ldr	r3, .L2
  43 0006 1B68     		ldr	r3, [r3]
  44 0008 1A4A     		ldr	r2, .L2
  45 000a 43F48013 		orr	r3, r3, #1048576
  46 000e 1360     		str	r3, [r2]
  36:./Src/myusart.c ****     /* GPIOD Mode Set */
  37:./Src/myusart.c ****     GPIOD_MODE &= ~(0xF << 16);  /* clear PD8 PD9 */
  47              		.loc 1 37 16
  48 0010 194B     		ldr	r3, .L2+4
  49 0012 1B68     		ldr	r3, [r3]
  50 0014 184A     		ldr	r2, .L2+4
  51 0016 23F47023 		bic	r3, r3, #983040
  52 001a 1360     		str	r3, [r2]
  38:./Src/myusart.c ****     GPIOD_MODE |=  (0x2 << 16) | (0x2 << 18);  /* PD8 PD9 set Alternate function mode */
  53              		.loc 1 38 16
  54 001c 164B     		ldr	r3, .L2+4
  55 001e 1B68     		ldr	r3, [r3]
  56 0020 154A     		ldr	r2, .L2+4
  57 0022 43F42023 		orr	r3, r3, #655360
  58 0026 1360     		str	r3, [r2]
  39:./Src/myusart.c ****     /* GPIOD Alternate Function Set */
  40:./Src/myusart.c ****     GPIOD_AFRH &= ~(0xFF << 0);  /* clear AFR8 AFR9 */
  59              		.loc 1 40 16
  60 0028 144B     		ldr	r3, .L2+8
  61 002a 1B68     		ldr	r3, [r3]
  62 002c 134A     		ldr	r2, .L2+8
  63 002e 23F0FF03 		bic	r3, r3, #255
  64 0032 1360     		str	r3, [r2]
  41:./Src/myusart.c ****     GPIOD_AFRH |=   0x77 << 0;   /* PD8: USART3 Tx | PD9: USART3 Rx */
  65              		.loc 1 41 16
  66 0034 114B     		ldr	r3, .L2+8
  67 0036 1B68     		ldr	r3, [r3]
  68 0038 104A     		ldr	r2, .L2+8
  69 003a 43F07703 		orr	r3, r3, #119
  70 003e 1360     		str	r3, [r2]
  42:./Src/myusart.c **** 
  43:./Src/myusart.c ****     /**************************** USART Set ****************************/
  44:./Src/myusart.c ****     /* USART RCC Enable */
  45:./Src/myusart.c ****     RCC_AHPB1ENR |= 1 << 18;   /* Enable clock of USART3 */
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 3


  71              		.loc 1 45 18
  72 0040 0F4B     		ldr	r3, .L2+12
  73 0042 1B68     		ldr	r3, [r3]
  74 0044 0E4A     		ldr	r2, .L2+12
  75 0046 43F48023 		orr	r3, r3, #262144
  76 004a 1360     		str	r3, [r2]
  46:./Src/myusart.c ****     /* UE (USART Enable) Set */
  47:./Src/myusart.c ****     USART3_CR1 |= 1 << 0;
  77              		.loc 1 47 16
  78 004c 0D4B     		ldr	r3, .L2+16
  79 004e 1B68     		ldr	r3, [r3]
  80 0050 0C4A     		ldr	r2, .L2+16
  81 0052 43F00103 		orr	r3, r3, #1
  82 0056 1360     		str	r3, [r2]
  48:./Src/myusart.c ****     /* USART mode set */
  49:./Src/myusart.c ****     USART3_CR1 |= (1 << 2) | (1 << 3);  /* Enable Tx/Rx */
  83              		.loc 1 49 16
  84 0058 0A4B     		ldr	r3, .L2+16
  85 005a 1B68     		ldr	r3, [r3]
  86 005c 094A     		ldr	r2, .L2+16
  87 005e 43F00C03 		orr	r3, r3, #12
  88 0062 1360     		str	r3, [r2]
  50:./Src/myusart.c ****     /* Baudrate Set */
  51:./Src/myusart.c ****     USART3_BRR = DEFAULT_F_CLK / BAUDRATE_38400;
  89              		.loc 1 51 5
  90 0064 084B     		ldr	r3, .L2+20
  91              		.loc 1 51 16
  92 0066 D022     		movs	r2, #208
  93 0068 1A60     		str	r2, [r3]
  52:./Src/myusart.c **** }
  94              		.loc 1 52 1
  95 006a 00BF     		nop
  96 006c BD46     		mov	sp, r7
  97              	.LCFI2:
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 006e 5DF8047B 		ldr	r7, [sp], #4
 101              	.LCFI3:
 102              		.cfi_restore 7
 103              		.cfi_def_cfa_offset 0
 104 0072 7047     		bx	lr
 105              	.L3:
 106              		.align	2
 107              	.L2:
 108 0074 14100240 		.word	1073877012
 109 0078 000C0048 		.word	1207962624
 110 007c 240C0048 		.word	1207962660
 111 0080 1C100240 		.word	1073877020
 112 0084 00480040 		.word	1073760256
 113 0088 0C480040 		.word	1073760268
 114              		.cfi_endproc
 115              	.LFE0:
 117              		.section	.text.MYUSART_SendData,"ax",%progbits
 118              		.align	1
 119              		.global	MYUSART_SendData
 120              		.syntax unified
 121              		.thumb
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 4


 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	MYUSART_SendData:
 126              	.LFB1:
  53:./Src/myusart.c **** 
  54:./Src/myusart.c **** void MYUSART_SendData(uint8_t* pTxBuffer, uint8_t len)
  55:./Src/myusart.c **** {
 127              		.loc 1 55 1
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 16
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              	.LCFI4:
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0002 85B0     		sub	sp, sp, #20
 137              	.LCFI5:
 138              		.cfi_def_cfa_offset 24
 139 0004 00AF     		add	r7, sp, #0
 140              	.LCFI6:
 141              		.cfi_def_cfa_register 7
 142 0006 7860     		str	r0, [r7, #4]
 143 0008 0B46     		mov	r3, r1
 144 000a FB70     		strb	r3, [r7, #3]
 145              	.LBB2:
  56:./Src/myusart.c ****     for(uint8_t i = 0; i < len; i++) {
 146              		.loc 1 56 17
 147 000c 0023     		movs	r3, #0
 148 000e FB73     		strb	r3, [r7, #15]
 149              		.loc 1 56 5
 150 0010 16E0     		b	.L5
 151              	.L8:
  57:./Src/myusart.c ****         /* Waiting for the transmit data register empty (bit 7 TXE) */
  58:./Src/myusart.c ****         while(!(USART3_ISR & 0x80));
 152              		.loc 1 58 14
 153 0012 00BF     		nop
 154              	.L6:
 155              		.loc 1 58 17 discriminator 1
 156 0014 104B     		ldr	r3, .L9
 157 0016 1B68     		ldr	r3, [r3]
 158              		.loc 1 58 28 discriminator 1
 159 0018 03F08003 		and	r3, r3, #128
 160              		.loc 1 58 14 discriminator 1
 161 001c 002B     		cmp	r3, #0
 162 001e F9D0     		beq	.L6
  59:./Src/myusart.c ****         /* Send Data */
  60:./Src/myusart.c ****         USART3_TDR = (*pTxBuffer++ & 0xFF);
 163              		.loc 1 60 33
 164 0020 7B68     		ldr	r3, [r7, #4]
 165 0022 5A1C     		adds	r2, r3, #1
 166 0024 7A60     		str	r2, [r7, #4]
 167              		.loc 1 60 23
 168 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 169              		.loc 1 60 9
 170 0028 0C4B     		ldr	r3, .L9+4
 171              		.loc 1 60 20
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 5


 172 002a 1A60     		str	r2, [r3]
  61:./Src/myusart.c ****         /* Waiting for the transmit complete (bit 6 TC) */
  62:./Src/myusart.c ****         while(!(USART3_ISR & 0x40));
 173              		.loc 1 62 14
 174 002c 00BF     		nop
 175              	.L7:
 176              		.loc 1 62 17 discriminator 1
 177 002e 0A4B     		ldr	r3, .L9
 178 0030 1B68     		ldr	r3, [r3]
 179              		.loc 1 62 28 discriminator 1
 180 0032 03F04003 		and	r3, r3, #64
 181              		.loc 1 62 14 discriminator 1
 182 0036 002B     		cmp	r3, #0
 183 0038 F9D0     		beq	.L7
  56:./Src/myusart.c ****         /* Waiting for the transmit data register empty (bit 7 TXE) */
 184              		.loc 1 56 34 discriminator 2
 185 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 186 003c 0133     		adds	r3, r3, #1
 187 003e FB73     		strb	r3, [r7, #15]
 188              	.L5:
  56:./Src/myusart.c ****         /* Waiting for the transmit data register empty (bit 7 TXE) */
 189              		.loc 1 56 5 discriminator 1
 190 0040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 191 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 192 0044 9A42     		cmp	r2, r3
 193 0046 E4D3     		bcc	.L8
 194              	.LBE2:
  63:./Src/myusart.c ****     }
  64:./Src/myusart.c **** }
 195              		.loc 1 64 1
 196 0048 00BF     		nop
 197 004a 00BF     		nop
 198 004c 1437     		adds	r7, r7, #20
 199              	.LCFI7:
 200              		.cfi_def_cfa_offset 4
 201 004e BD46     		mov	sp, r7
 202              	.LCFI8:
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 0050 5DF8047B 		ldr	r7, [sp], #4
 206              	.LCFI9:
 207              		.cfi_restore 7
 208              		.cfi_def_cfa_offset 0
 209 0054 7047     		bx	lr
 210              	.L10:
 211 0056 00BF     		.align	2
 212              	.L9:
 213 0058 1C480040 		.word	1073760284
 214 005c 28480040 		.word	1073760296
 215              		.cfi_endproc
 216              	.LFE1:
 218              		.section	.text.MYUSART_ReceiveData,"ax",%progbits
 219              		.align	1
 220              		.global	MYUSART_ReceiveData
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 6


 224              		.fpu fpv4-sp-d16
 226              	MYUSART_ReceiveData:
 227              	.LFB2:
  65:./Src/myusart.c **** 
  66:./Src/myusart.c **** uint8_t MYUSART_ReceiveData()
  67:./Src/myusart.c **** {
 228              		.loc 1 67 1
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0000 80B4     		push	{r7}
 234              	.LCFI10:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 7, -4
 237 0002 83B0     		sub	sp, sp, #12
 238              	.LCFI11:
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              	.LCFI12:
 242              		.cfi_def_cfa_register 7
  68:./Src/myusart.c ****     uint8_t data;
  69:./Src/myusart.c ****     /* Waiting for the transmit data transmit to USART_RDR register (USART_ISR bit 5 RXNE) */
  70:./Src/myusart.c ****     while(!(USART3_ISR & 0x20));
 243              		.loc 1 70 10
 244 0006 00BF     		nop
 245              	.L12:
 246              		.loc 1 70 13 discriminator 1
 247 0008 0A4B     		ldr	r3, .L14
 248 000a 1B68     		ldr	r3, [r3]
 249              		.loc 1 70 24 discriminator 1
 250 000c 03F02003 		and	r3, r3, #32
 251              		.loc 1 70 10 discriminator 1
 252 0010 002B     		cmp	r3, #0
 253 0012 F9D0     		beq	.L12
  71:./Src/myusart.c ****     /* Receive Data */
  72:./Src/myusart.c ****     data = USART3_RDR;
 254              		.loc 1 72 12
 255 0014 084B     		ldr	r3, .L14+4
 256 0016 1B68     		ldr	r3, [r3]
 257              		.loc 1 72 10
 258 0018 FB71     		strb	r3, [r7, #7]
  73:./Src/myusart.c ****     /* Clear RXNE by USARTx_RQR (bit 3 RXFRQ) */
  74:./Src/myusart.c ****     USART3_RQR |= 1 << 3;
 259              		.loc 1 74 16
 260 001a 084B     		ldr	r3, .L14+8
 261 001c 1B68     		ldr	r3, [r3]
 262 001e 074A     		ldr	r2, .L14+8
 263 0020 43F00803 		orr	r3, r3, #8
 264 0024 1360     		str	r3, [r2]
  75:./Src/myusart.c ****     return data;
 265              		.loc 1 75 12
 266 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  76:./Src/myusart.c **** }
 267              		.loc 1 76 1
 268 0028 1846     		mov	r0, r3
 269 002a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 7


 270              	.LCFI13:
 271              		.cfi_def_cfa_offset 4
 272 002c BD46     		mov	sp, r7
 273              	.LCFI14:
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 002e 5DF8047B 		ldr	r7, [sp], #4
 277              	.LCFI15:
 278              		.cfi_restore 7
 279              		.cfi_def_cfa_offset 0
 280 0032 7047     		bx	lr
 281              	.L15:
 282              		.align	2
 283              	.L14:
 284 0034 1C480040 		.word	1073760284
 285 0038 24480040 		.word	1073760292
 286 003c 18480040 		.word	1073760280
 287              		.cfi_endproc
 288              	.LFE2:
 290              		.section	.rodata
 291              		.align	2
 292              	.LC0:
 293 0000 0D00     		.ascii	"\015\000"
 294              		.section	.text._write,"ax",%progbits
 295              		.align	1
 296              		.global	_write
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	_write:
 303              	.LFB3:
  77:./Src/myusart.c **** 
  78:./Src/myusart.c **** int _write(int file, char *ptr, int len)
  79:./Src/myusart.c **** {
 304              		.loc 1 79 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              	.LCFI16:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 84B0     		sub	sp, sp, #16
 314              	.LCFI17:
 315              		.cfi_def_cfa_offset 24
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI18:
 318              		.cfi_def_cfa_register 7
 319 0006 F860     		str	r0, [r7, #12]
 320 0008 B960     		str	r1, [r7, #8]
 321 000a 7A60     		str	r2, [r7, #4]
  80:./Src/myusart.c **** 	MYUSART_SendData((uint8_t*)ptr, len);
 322              		.loc 1 80 2
 323 000c 7B68     		ldr	r3, [r7, #4]
 324 000e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 8


 325 0010 1946     		mov	r1, r3
 326 0012 B868     		ldr	r0, [r7, #8]
 327 0014 FFF7FEFF 		bl	MYUSART_SendData
  81:./Src/myusart.c **** 	MYUSART_SendData((uint8_t*)"\r", 1);
 328              		.loc 1 81 2
 329 0018 0121     		movs	r1, #1
 330 001a 0448     		ldr	r0, .L18
 331 001c FFF7FEFF 		bl	MYUSART_SendData
  82:./Src/myusart.c **** 	return len;
 332              		.loc 1 82 9
 333 0020 7B68     		ldr	r3, [r7, #4]
  83:./Src/myusart.c **** }
 334              		.loc 1 83 1
 335 0022 1846     		mov	r0, r3
 336 0024 1037     		adds	r7, r7, #16
 337              	.LCFI19:
 338              		.cfi_def_cfa_offset 8
 339 0026 BD46     		mov	sp, r7
 340              	.LCFI20:
 341              		.cfi_def_cfa_register 13
 342              		@ sp needed
 343 0028 80BD     		pop	{r7, pc}
 344              	.L19:
 345 002a 00BF     		.align	2
 346              	.L18:
 347 002c 00000000 		.word	.LC0
 348              		.cfi_endproc
 349              	.LFE3:
 351              		.section	.rodata
 352 0002 0000     		.align	2
 353              	.LC1:
 354 0004 0A0D00   		.ascii	"\012\015\000"
 355              		.section	.text._read,"ax",%progbits
 356              		.align	1
 357              		.global	_read
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu fpv4-sp-d16
 363              	_read:
 364              	.LFB4:
  84:./Src/myusart.c **** 
  85:./Src/myusart.c **** int _read(int file, char *ptr, int len) 
  86:./Src/myusart.c **** {
 365              		.loc 1 86 1
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 24
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369 0000 80B5     		push	{r7, lr}
 370              	.LCFI21:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 86B0     		sub	sp, sp, #24
 375              	.LCFI22:
 376              		.cfi_def_cfa_offset 32
 377 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 9


 378              	.LCFI23:
 379              		.cfi_def_cfa_register 7
 380 0006 F860     		str	r0, [r7, #12]
 381 0008 B960     		str	r1, [r7, #8]
 382 000a 7A60     		str	r2, [r7, #4]
 383              	.LBB3:
  87:./Src/myusart.c **** 	for (int i = 0; i < len; i++) {
 384              		.loc 1 87 11
 385 000c 0023     		movs	r3, #0
 386 000e 7B61     		str	r3, [r7, #20]
 387              		.loc 1 87 2
 388 0010 13E0     		b	.L21
 389              	.L24:
  88:./Src/myusart.c **** 		*ptr = (char)MYUSART_ReceiveData();
 390              		.loc 1 88 16
 391 0012 FFF7FEFF 		bl	MYUSART_ReceiveData
 392 0016 0346     		mov	r3, r0
 393 0018 1A46     		mov	r2, r3
 394              		.loc 1 88 8
 395 001a BB68     		ldr	r3, [r7, #8]
 396 001c 1A70     		strb	r2, [r3]
  89:./Src/myusart.c **** 		if(*ptr == '\r') break; /* read Enter */
 397              		.loc 1 89 6
 398 001e BB68     		ldr	r3, [r7, #8]
 399 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 400              		.loc 1 89 5
 401 0022 0D2B     		cmp	r3, #13
 402 0024 0ED0     		beq	.L26
  90:./Src/myusart.c **** 		MYUSART_SendData((uint8_t*)ptr++, 1);
 403              		.loc 1 90 3 discriminator 2
 404 0026 BB68     		ldr	r3, [r7, #8]
 405 0028 5A1C     		adds	r2, r3, #1
 406 002a BA60     		str	r2, [r7, #8]
 407 002c 0121     		movs	r1, #1
 408 002e 1846     		mov	r0, r3
 409 0030 FFF7FEFF 		bl	MYUSART_SendData
  87:./Src/myusart.c **** 		*ptr = (char)MYUSART_ReceiveData();
 410              		.loc 1 87 28 discriminator 2
 411 0034 7B69     		ldr	r3, [r7, #20]
 412 0036 0133     		adds	r3, r3, #1
 413 0038 7B61     		str	r3, [r7, #20]
 414              	.L21:
  87:./Src/myusart.c **** 		*ptr = (char)MYUSART_ReceiveData();
 415              		.loc 1 87 2 discriminator 1
 416 003a 7A69     		ldr	r2, [r7, #20]
 417 003c 7B68     		ldr	r3, [r7, #4]
 418 003e 9A42     		cmp	r2, r3
 419 0040 E7DB     		blt	.L24
 420 0042 00E0     		b	.L23
 421              	.L26:
  89:./Src/myusart.c **** 		if(*ptr == '\r') break; /* read Enter */
 422              		.loc 1 89 3
 423 0044 00BF     		nop
 424              	.L23:
 425              	.LBE3:
  91:./Src/myusart.c **** 	}
  92:./Src/myusart.c **** 	MYUSART_SendData((uint8_t*)"\n\r", 2);
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 10


 426              		.loc 1 92 2
 427 0046 0221     		movs	r1, #2
 428 0048 0348     		ldr	r0, .L27
 429 004a FFF7FEFF 		bl	MYUSART_SendData
  93:./Src/myusart.c **** 	return len;
 430              		.loc 1 93 9
 431 004e 7B68     		ldr	r3, [r7, #4]
  94:./Src/myusart.c **** }...
 432              		.loc 1 94 1
 433 0050 1846     		mov	r0, r3
 434 0052 1837     		adds	r7, r7, #24
 435              	.LCFI24:
 436              		.cfi_def_cfa_offset 8
 437 0054 BD46     		mov	sp, r7
 438              	.LCFI25:
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 0056 80BD     		pop	{r7, pc}
 442              	.L28:
 443              		.align	2
 444              	.L27:
 445 0058 04000000 		.word	.LC1
 446              		.cfi_endproc
 447              	.LFE4:
 449              		.text
 450              	.Letext0:
 451              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 452              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
ARM GAS  C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 myusart.c
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:18     .text.MYUSART_Init:00000000 $t
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:26     .text.MYUSART_Init:00000000 MYUSART_Init
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:108    .text.MYUSART_Init:00000074 $d
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:118    .text.MYUSART_SendData:00000000 $t
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:125    .text.MYUSART_SendData:00000000 MYUSART_SendData
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:213    .text.MYUSART_SendData:00000058 $d
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:219    .text.MYUSART_ReceiveData:00000000 $t
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:226    .text.MYUSART_ReceiveData:00000000 MYUSART_ReceiveData
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:284    .text.MYUSART_ReceiveData:00000034 $d
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:291    .rodata:00000000 $d
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:295    .text._write:00000000 $t
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:302    .text._write:00000000 _write
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:347    .text._write:0000002c $d
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:356    .text._read:00000000 $t
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:363    .text._read:00000000 _read
C:\Users\Benson\AppData\Local\Temp\cc1mL8XK.s:445    .text._read:00000058 $d

NO UNDEFINED SYMBOLS
